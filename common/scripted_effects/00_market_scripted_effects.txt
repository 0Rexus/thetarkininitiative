research_complete = {
	if = {
		limit = {
			has_country_flag = tie_research_complete_flag
		}
		add_to_array = { fighter_product_array = 0 }
	}
	if = {
		limit = {
			has_country_flag = tie_digger
		}
		add_to_array = { fighter_product_array = 2 }
	}
}
shares_update = {
    #Corporation (Country) Scope

    for_each_loop = {
        array = shares_country
        index = ii
        value = country_temp
        break = brk

        set_variable = { shares_percent@var:country_temp = shares_amount@var:country_temp }
        divide_variable = { shares_percent@var:country_temp = shares_outstanding }
    }

    #Sort
    clear_temp_array = shares_amount_temp_array
    clear_temp_array = shares_country_temp_array
    for_each_loop = {
        array = shares_country
        index = iii
        value = cy_temp
        break = st_brk

        for_each_loop = {
            array = shares_amount_temp_array
            index = ii
            value = vv
            break = bb

            if = {
                limit = {
                    check_variable = { vv < shares_amount@var:country_temp }
                }
                add_to_temp_array = { 
                    array = shares_amount_temp_array 
                    value = shares_amount@var:country_temp
                    index = ii
                }
                add_to_temp_array = { 
                    array = shares_country_temp_array 
                    value = cy_temp
                    index = ii
                }
                set_temp_variable = { bb = 1 }
            }
        }
        if = {
            limit = {
                check_variable = { bb = 0 }
            }
            add_to_temp_array = { shares_amount_temp_array = shares_amount@var:country_temp }
            add_to_temp_array = { shares_country_temp_array = cy_temp }
        }
    }
    clear_array = shares_country
    for_each_loop = {
        array = shares_country_temp_array
        index = ii
        value = cy_temp
        break = st_brk

        add_to_array = { shares_country = cy_temp }
    }

    #Localization Variables
    set_variable = { shares_country1 = shares_country^0 }
    set_variable = { shares_country2 = shares_country^1 }
    set_variable = { shares_country3 = shares_country^2 }
    set_variable = { shares_country4 = shares_country^3 }
    set_variable = { shares_country5 = shares_country^4 }
    set_variable = { shares_country6 = shares_country^5 }
    
    set_variable = { shares_amount1 = shares_amount@var:shares_country1 }
    set_variable = { shares_amount2 = shares_amount@var:shares_country2 }
    set_variable = { shares_amount3 = shares_amount@var:shares_country3 }
    set_variable = { shares_amount4 = shares_amount@var:shares_country4 }
    set_variable = { shares_amount5 = shares_amount@var:shares_country5 }
    set_variable = { shares_amount6 = shares_amount@var:shares_country6 }
    
    set_variable = { shares_percent1 = shares_percent@var:shares_country1 }
    set_variable = { shares_percent2 = shares_percent@var:shares_country2 }
    set_variable = { shares_percent3 = shares_percent@var:shares_country3 }
    set_variable = { shares_percent4 = shares_percent@var:shares_country4 }
    set_variable = { shares_percent5 = shares_percent@var:shares_country5 }
    set_variable = { shares_percent6 = shares_percent@var:shares_country6 }
}
#### ENTERTAINMENT MARKET - NEVERFIRE
calculate_censorship_total = {			
	## Calculate two things that want to be together		
	set_temp_variable = {consortium_corp_total = consortium_influence_number}
	add_to_temp_variable = { consortium_corp_total = corporate_influence_number}
	multiply_temp_variable = {consortium_corp_total = 2}
	round_temp_variable = consortium_corp_total
	### Look at opposing sides
	set_temp_variable = {censorship_total = republic_influence_number}		### (Republic influence - empire influence) -  (consortium + corps) = Censorship_total
	subtract_from_temp_variable = { censorship_total = imperial_influence_number}
	if = {
		limit = {
			check_variable = {censorship_total < 0}
		}
		add_to_temp_variable = {censorship_total = consortium_corp_total}
		clamp_variable = {
			var = censorship_total
			max = 0
		}
	}else_if = {
		limit = {
			check_variable = {censorship_total > 0}
		}
		add_to_temp_variable = {censorship_total = consortium_corp_total}
		clamp_variable = {
			var = censorship_total
			min = 0
		}
	}
	multiply_temp_variable = {censorship_total = 33} ### 100 - abs((Censorship_total x 33%)- censorship) WHERE CENSORSHIP = -100 to 100
	subtract_from_temp_variable = {censorship_total = censorship}
	if = {
		limit = {
			check_variable = {censorship_total < 0} ### CREATING ABSOLUTE VALUE
		}
		multiply_temp_variable = {censorship_total = -1}
	}
	clamp_temp_variable = {
		var = censorship_total
		min = 0
		max = 100
	}
	subtract_from_temp_variable = {censorship_total = 100}
	multiply_temp_variable = {censorship_total = -1}
	multiply_temp_variable = {censorship_total = population_entertainment}
	add_to_temp_variable = { entertainment_profit_overall = censorship_total}
}
calculate_drama_vs_comedy_total = {
	## Calculate two things that want to be together		
	set_temp_variable = {empire_republic_total = imperial_influence_number}
	add_to_temp_variable = { empire_republic_total = republic_influence_number}
	multiply_temp_variable = {empire_republic_total = 2}
	round_temp_variable = empire_republic_total
	### Look at opposing sides
	set_temp_variable = {drama_vs_comedy_total = consortium_influence_number}		### (Republic influence - empire influence) -  (consortium + corps) = drama_vs_comedy_total
	subtract_from_temp_variable = { drama_vs_comedy_total = corporate_influence_number}
	if = {
		limit = {
			check_variable = {drama_vs_comedy_total < 0}
		}
		add_to_temp_variable = {drama_vs_comedy_total = empire_republic_total}
		clamp_variable = {
			var = drama_vs_comedy_total
			max = 0
		}
	}else_if = {
		limit = {
			check_variable = {drama_vs_comedy_total > 0}
		}
		add_to_temp_variable = {drama_vs_comedy_total = empire_republic_total}
		clamp_variable = {
			var = drama_vs_comedy_total
			min = 0
		}
	}
	multiply_temp_variable = {drama_vs_comedy_total = 33} ### 100 - abs((drama_vs_comedy_total x 33%)- censorship) WHERE CENSORSHIP = -100 to 100
	subtract_from_temp_variable = {drama_vs_comedy_total = drama}
	if = {
		limit = {
			check_variable = {drama_vs_comedy_total < 0} ### CREATING ABSOLUTE VALUE
		}
		multiply_temp_variable = {drama_vs_comedy_total = -1}
	}
	clamp_temp_variable = {
		var = drama_vs_comedy_total
		min = 0
		max = 100
	}
	subtract_from_temp_variable = {drama_vs_comedy_total = 100}
	multiply_temp_variable = {drama_vs_comedy_total = -1}
	multiply_temp_variable = {drama_vs_comedy_total = population_entertainment}
	add_to_temp_variable = { entertainment_profit_overall = drama_vs_comedy_total}

}
calculate_tonality_total = {					
	## Calculate two things that want to be together		
	set_temp_variable = {empire_corp_total = imperial_influence_number}
	add_to_temp_variable = { empire_corp_total = corporate_influence_number}
	multiply_temp_variable = {empire_corp_total = 2}
	round_temp_variable = empire_corp_total
	### Look at opposing sides
	set_temp_variable = {tonality_total = republic_influence_number}		### (Republic influence - empire influence) -  (consortium + corps) = tonality_total
	subtract_from_temp_variable = { tonality_total = consortium_influence_number}
	if = {
		limit = {
			check_variable = {tonality_total < 0}
		}
		add_to_temp_variable = {tonality_total = empire_corp_total}
		clamp_variable = {
			var = tonality_total
			max = 0
		}
	}else_if = {
		limit = {
			check_variable = {tonality_total > 0}
		}
		add_to_temp_variable = {tonality_total = empire_corp_total}
		clamp_variable = {
			var = tonality_total
			min = 0
		}
	}
	multiply_temp_variable = {tonality_total = 33} ### 100 - abs((tonality_total x 33%)- censorship) WHERE CENSORSHIP = -100 to 100
	subtract_from_temp_variable = {tonality_total = tonality}
	if = {
		limit = {
			check_variable = {tonality_total < 0} ### CREATING ABSOLUTE VALUE
		}
		multiply_temp_variable = {tonality_total = -1}
	}
	clamp_temp_variable = {
		var = tonality_total
		min = 0
		max = 100
	}
	subtract_from_temp_variable = {tonality_total = 100}
	multiply_temp_variable = {tonality_total = -1}
	multiply_temp_variable = {tonality_total = population_entertainment}
	add_to_temp_variable = { entertainment_profit_overall = tonality_total}
}
### SHIP MARKET - NEVERFIRE
recalculate_light_ship_creation_time = {  ########## 
	set_variable = {light_ship_production_time = light_selected_ship_production_cost}
	divide_variable = {light_ship_production_time = light_ship_workers }
	multiply_variable = {light_ship_production_time = 100 }
	round_variable = light_ship_production_time
}
recalculate_medium_ship_creation_time = {  ########## 
	set_variable = {medium_ship_production_time = medium_selected_ship_production_cost}
	divide_variable = {medium_ship_production_time = medium_ship_workers }
	multiply_variable = {medium_ship_production_time = 100 }
	round_variable = medium_ship_production_time
}
recalculate_heavy_ship_creation_time = {  ########## 
	set_variable = {heavy_ship_production_time = heavy_selected_ship_production_cost}
	divide_variable = {heavy_ship_production_time = heavy_ship_workers }
	multiply_variable = {heavy_ship_production_time = 100 }
	round_variable = heavy_ship_production_time
}
erase_previous_ship_menu_selection = {
	if = {
		limit = {
			has_country_flag = corvette_buying_market_open
		}
		clr_country_flag = corvette_buying_market_open
	}else_if = {
		limit = {
			has_country_flag = frigate_buying_market_open
		}
		clr_country_flag = frigate_buying_market_open
	}else_if = {
		limit = {
			has_country_flag = cruiser_buying_market_open
		}
		clr_country_flag = cruiser_buying_market_open
	}else_if = {
		limit = {
			has_country_flag = star_destroyer_buying_market_open
		}
		clr_country_flag = star_destroyer_buying_market_open
	}
}
erase_previous_ship_menu_faction_selection = {
	if = {
		limit = {
			has_country_flag = republic_market_open
		}
		clr_country_flag = republic_market_open
	}else_if = {
		limit = {
			has_country_flag = neutral_market_open
		}
		clr_country_flag = neutral_market_open
	}else_if = {
		limit = {
			has_country_flag = imperial_market_open
		}
		clr_country_flag = imperial_market_open
	}
}
erase_previous_buying_market_selection = {
	if = {
		limit = {
			has_country_flag = open_market_ground_forces
		}
		clr_country_flag = open_market_ground_forces
	}else_if = {
		limit = {
			has_country_flag = starfighters_buying_market_open
		}
		clr_country_flag = starfighters_buying_market_open
	}else_if = {
		limit = {
			has_country_flag = open_market_ships
		}
		clr_country_flag = open_market_ships
	}else_if = {
		limit = {
			has_country_flag = open_market_droids
		}
		clr_country_flag = open_market_droids
	}else_if = {
		limit = {
			has_country_flag = open_market_mercs
		}
		clr_country_flag = open_market_mercs
	}else_if = {
		limit = {
			has_country_flag = open_market_medical
		}
		clr_country_flag = open_market_medical
	}else_if = {
		limit = {
			has_country_flag = open_market_entertainment
		}
		clr_country_flag = open_market_entertainment
	}else_if = {
		limit = {
			has_country_flag = open_market_resource_extraction
		}
		clr_country_flag = open_market_resource_extraction
	}else_if = {
		limit = {
			has_country_flag = open_market_raw_goods
		}
		clr_country_flag = open_market_raw_goods
	}
}
erase_previous_food_production = {
	if = {
		limit = {
			has_idea = salthia_beans
		}
		remove_ideas = salthia_beans
	}else_if = {
		limit = {
			has_idea = space_waffle
		}
		remove_ideas = space_waffle
	}else_if = {
		limit = {
			has_idea = chokeroot
		}
		remove_ideas = chokeroot
	}else_if = {
		limit = {
			has_idea = xizor_salad
		}
		remove_ideas = xizor_salad
	}else_if = {
		limit = {
			has_idea = blue_milk
		}
		remove_ideas = blue_milk
	}else_if = {
		limit = {
			has_idea = prison_grub
		}
		remove_ideas = prison_grub
	}else_if = {
		limit = {
			has_idea = roasted_porg
		}
		remove_ideas = roasted_porg
	}else_if = {
		limit = {
			has_idea = skewered_frogs
		}
		remove_ideas = skewered_frogs
	}else_if = {
		limit = {
			has_idea = shawda_club_sandwich
		}
		remove_ideas = shawda_club_sandwich
	}else_if = {
		limit = {
			has_idea = ration_bar
		}
		remove_ideas = ration_bar
	}else_if = {
		limit = {
			has_idea = ahrisa
		}
		remove_ideas = ahrisa
	}else_if = {
		limit = {
			has_idea = sweet_roll
		}
		remove_ideas = sweet_roll
	}else_if = {
		limit = {
			has_idea = ardys_beverages
		}
		remove_ideas = ardys_beverages
	}else_if = {
		limit = {
			has_idea = fried_rispic
		}
		remove_ideas = fried_rispic
	}
}
recalculate_air_1_creation_amount = {  ########## CALCULATES HOW MANY YOU CAN MAKE IN A WEEK
	set_variable = {air_1_production_amount = air_1_workers}
	divide_variable = {air_1_production_amount = global.air_market_ic_cost_holder@var:air_1_production_selected_fighter }
	divide_variable = {air_1_production_amount = 40 }
	round_variable = air_1_production_amount
}
recalculate_air_2_creation_amount = {  ########## CALCULATES HOW MANY YOU CAN MAKE IN A WEEK
	set_variable = {air_2_production_amount = air_2_workers}
	divide_variable = {air_2_production_amount = global.air_market_ic_cost_holder@var:air_2_production_selected_fighter }
	divide_variable = {air_2_production_amount = 40 }
	round_variable = air_2_production_amount
}
recalculate_land_1_creation_amount = {  ########## CALCULATES HOW MANY YOU CAN MAKE IN A WEEK
	set_variable = {land_1_production_amount = land_1_workers}
	divide_variable = {land_1_production_amount = global.land_market_ic_cost_holder@var:land_1_selected_item }
	divide_variable = {land_1_production_amount = 20 }
	round_variable = land_1_production_amount
}
recalculate_land_2_creation_amount = {  ########## CALCULATES HOW MANY YOU CAN MAKE IN A WEEK
	set_variable = {land_2_production_amount = land_2_workers}
	divide_variable = {land_2_production_amount = global.land_market_ic_cost_holder@var:land_2_selected_item }
	divide_variable = {land_2_production_amount = 20 }
	round_variable = land_2_production_amount
}
recalculate_soft_1_creation_amount = {  ########## CALCULATES HOW MANY YOU CAN MAKE IN A WEEK
	set_variable = {soft_1_production_amount = soft_1_workers}
	divide_variable = {soft_1_production_amount = global.soft_market_ic_cost_holder@var:soft_1_selected_item }
	divide_variable = {soft_1_production_amount = 20 }
	round_variable = soft_1_production_amount
}
recalculate_soft_2_creation_amount = {  ########## CALCULATES HOW MANY YOU CAN MAKE IN A WEEK
	set_variable = {soft_2_production_amount = soft_2_workers}
	divide_variable = {soft_2_production_amount = global.soft_market_ic_cost_holder@var:soft_2_selected_item }
	divide_variable = {soft_2_production_amount = 20 }
	round_variable = soft_2_production_amount
}